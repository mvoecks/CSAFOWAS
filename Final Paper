Michael Voecks
The Golden Era of Open Source

	Over the course of the semester, almost all of the speakers that have came and talked to the class have shared a common theme, one similar talking point that everybody has touched on. That one thing is gaining experience from contributing to an open source project that you are probably not going to get paid for. Almost everybody talked about GitHub and the extensive possibilities that it has to offer. One can browse the extensive list of projects that are looking for contributors to add to the development of their project, and find a topic/project that interests them. After cloning the repository and looking at the source code and the documentation, one makes their own adjustments to the code by adding new code and/or fixing existing bugs. After you have made the changes that you think will better the project, you can submit a pull request to the creators of the project and hope that the appreciate the changes you made. If they do, they might merge the code you wrote with their existing project and now your code is a part of the project they will push out, and if not, then you can try to make your changes better or work on a different project.

	GitHub is not the only open source contribution site out there, and you don’t necessarily need to look online for opportunities to contribute to open source projects. Odds are, some of the programs you use everyday are open source, and if you think of a new feature that you would like to introduce to the program, chances are you can find the code online and try to implement the feature yourself. After that you can share your new features with the internet so everybody can share in your genius, but it’s probably a good idea to contact the creators first.

There are too many different open source projects to count, but that doesn't mean that I’m not going to fill space by talking about some of the big ones. OpenOffice, an open source project run by Apache, is a word processor that has over one hundred million downloads. It is mainly know as a free alternative to Microsoft office that is completely open source. Something that is more commonly known is the Computer, and now Xbox game, Minecraft. Minecraft is nearly open source, and while the original code is impossible to get, many people have decompiled the code and provided the code online. With this code you can change the game and add new features, mods, to the game for you to play with. Many people have created mods and there is a huge community that plays with these mods every day. On a more basic level, there are a few game engines that are completely open source, such as the Unreal Engine, so if you have an idea for a game that you would like to make you can piggyback off these engines to build your game.

	Contributing to open source is one of the greatest things you can do to further your computer science career. First off, you can learn so much from just browsing through the docs. As Ben said, “One of the greatest ways to get better at programming is looking at good code from great programmers.” Open Source contribution is also a great way to gain  a lot of experience that you can put on a resume for when you are applying for real jobs. A big thing that companies look for when they are going through the hiring process is previous experience. They want to look for people who can see a project through to completion so that they know they are not hiring someone who is incompetent and can benefit their company. You can also look at open source from a weird benevolent standpoint and just get a good feeling of a job well done when you submit code that is making other people’s lives better. Plus, if you get lucky you might be able to find some open source jobs that actually pay, however those are rare to come by. 

	There are a lot of things that one has to look out for when contributing to open source software, as you do not want to create more problems than you are trying to solve. First off, if there is a task that is too big for you to handle, don’t submit code that you know doesn't work, all that is achieved from this is distracting the creators of the project from actual work by looking through the junk that you have tried to pass off as a contribution, thus wasting everybody’s time. However, if you do write good code that will get merged into an existing project, be sure you have looked over not only your code but the entire framework of the project so that you are not unintentionally introducing more bugs into the project, after all, you don't want to break something that isn’t yours. 

	There are many benefits and drawbacks to open source software. Open source software is usually free but you can still contribute to the creators by donating to their cause, thus giving the ability to reach a wider audience. This however leads to open source projects not drawing in as much money for the final product as some people will download it and not donate, which sadly many of us fall victim to. Secondly, a small developer is able to get more support on the projects he is working on by making his project open source and asking for help from other independent developers around the world. With good QA testing this is a good thing but developers have to look out for bad code being submitted to their project in order to avoid errors down the road. Lastly it is good to have open source code as it boost creativity in computer science. It is an amazing thing to be able to add something to a project that you want implemented and it is equally amazing to see the crazy/cool things that others are contributing to your project.

	Personally, I am a big fan of open source software as it allows Computer Scientists more freedom in their line of work. I can understand why it would be beneficial to keep some projects closed source, either for personal or monetary gain, but I think it is magical that people are helping each other out and creating mods for Minecraft or helping optimize the latest cloud storage algorithm. In the future I am planning on contributing to open source projects, and hopefully creating a few of my own.
	
*In an attempt to learn more about open source/GitHub, I will try to put this essay on my GitHub, “mvoecks”
